//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Wpf_Linq.Report
{
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_Report")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_Report : global::System.Data.DataSet {
        
        private DSHKDataTable tableDSHK;
        
        private TK_HK_TTHKDataTable tableTK_HK_TTHK;
        
        private TK_HK_CHHKDataTable tableTK_HK_CHHK;
        
        private TK_HK_CHKDataTable tableTK_HK_CHK;
        
        private TK_NK_TTNKDataTable tableTK_NK_TTNK;
        
        private TK_NK_CHNKDataTable tableTK_NK_CHNK;
        
        private TK_NK_CNKDataTable tableTK_NK_CNK;
        
        private DSNKTheoHKDataTable tableDSNKTheoHK;
        
        private TK_NK_DT_TTDTDataTable tableTK_NK_DT_TTDT;
        
        private DSDTDataTable tableDSDT;
        
        private TangGiamDataTable tableTangGiam;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet_Report() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet_Report(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DSHK"] != null)) {
                    base.Tables.Add(new DSHKDataTable(ds.Tables["DSHK"]));
                }
                if ((ds.Tables["TK_HK_TTHK"] != null)) {
                    base.Tables.Add(new TK_HK_TTHKDataTable(ds.Tables["TK_HK_TTHK"]));
                }
                if ((ds.Tables["TK_HK_CHHK"] != null)) {
                    base.Tables.Add(new TK_HK_CHHKDataTable(ds.Tables["TK_HK_CHHK"]));
                }
                if ((ds.Tables["TK_HK_CHK"] != null)) {
                    base.Tables.Add(new TK_HK_CHKDataTable(ds.Tables["TK_HK_CHK"]));
                }
                if ((ds.Tables["TK_NK_TTNK"] != null)) {
                    base.Tables.Add(new TK_NK_TTNKDataTable(ds.Tables["TK_NK_TTNK"]));
                }
                if ((ds.Tables["TK_NK_CHNK"] != null)) {
                    base.Tables.Add(new TK_NK_CHNKDataTable(ds.Tables["TK_NK_CHNK"]));
                }
                if ((ds.Tables["TK_NK_CNK"] != null)) {
                    base.Tables.Add(new TK_NK_CNKDataTable(ds.Tables["TK_NK_CNK"]));
                }
                if ((ds.Tables["DSNKTheoHK"] != null)) {
                    base.Tables.Add(new DSNKTheoHKDataTable(ds.Tables["DSNKTheoHK"]));
                }
                if ((ds.Tables["TK_NK_DT_TTDT"] != null)) {
                    base.Tables.Add(new TK_NK_DT_TTDTDataTable(ds.Tables["TK_NK_DT_TTDT"]));
                }
                if ((ds.Tables["DSDT"] != null)) {
                    base.Tables.Add(new DSDTDataTable(ds.Tables["DSDT"]));
                }
                if ((ds.Tables["TangGiam"] != null)) {
                    base.Tables.Add(new TangGiamDataTable(ds.Tables["TangGiam"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DSHKDataTable DSHK {
            get {
                return this.tableDSHK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_HK_TTHKDataTable TK_HK_TTHK {
            get {
                return this.tableTK_HK_TTHK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_HK_CHHKDataTable TK_HK_CHHK {
            get {
                return this.tableTK_HK_CHHK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_HK_CHKDataTable TK_HK_CHK {
            get {
                return this.tableTK_HK_CHK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_NK_TTNKDataTable TK_NK_TTNK {
            get {
                return this.tableTK_NK_TTNK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_NK_CHNKDataTable TK_NK_CHNK {
            get {
                return this.tableTK_NK_CHNK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_NK_CNKDataTable TK_NK_CNK {
            get {
                return this.tableTK_NK_CNK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DSNKTheoHKDataTable DSNKTheoHK {
            get {
                return this.tableDSNKTheoHK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TK_NK_DT_TTDTDataTable TK_NK_DT_TTDT {
            get {
                return this.tableTK_NK_DT_TTDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DSDTDataTable DSDT {
            get {
                return this.tableDSDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TangGiamDataTable TangGiam {
            get {
                return this.tableTangGiam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet_Report cln = ((DataSet_Report)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DSHK"] != null)) {
                    base.Tables.Add(new DSHKDataTable(ds.Tables["DSHK"]));
                }
                if ((ds.Tables["TK_HK_TTHK"] != null)) {
                    base.Tables.Add(new TK_HK_TTHKDataTable(ds.Tables["TK_HK_TTHK"]));
                }
                if ((ds.Tables["TK_HK_CHHK"] != null)) {
                    base.Tables.Add(new TK_HK_CHHKDataTable(ds.Tables["TK_HK_CHHK"]));
                }
                if ((ds.Tables["TK_HK_CHK"] != null)) {
                    base.Tables.Add(new TK_HK_CHKDataTable(ds.Tables["TK_HK_CHK"]));
                }
                if ((ds.Tables["TK_NK_TTNK"] != null)) {
                    base.Tables.Add(new TK_NK_TTNKDataTable(ds.Tables["TK_NK_TTNK"]));
                }
                if ((ds.Tables["TK_NK_CHNK"] != null)) {
                    base.Tables.Add(new TK_NK_CHNKDataTable(ds.Tables["TK_NK_CHNK"]));
                }
                if ((ds.Tables["TK_NK_CNK"] != null)) {
                    base.Tables.Add(new TK_NK_CNKDataTable(ds.Tables["TK_NK_CNK"]));
                }
                if ((ds.Tables["DSNKTheoHK"] != null)) {
                    base.Tables.Add(new DSNKTheoHKDataTable(ds.Tables["DSNKTheoHK"]));
                }
                if ((ds.Tables["TK_NK_DT_TTDT"] != null)) {
                    base.Tables.Add(new TK_NK_DT_TTDTDataTable(ds.Tables["TK_NK_DT_TTDT"]));
                }
                if ((ds.Tables["DSDT"] != null)) {
                    base.Tables.Add(new DSDTDataTable(ds.Tables["DSDT"]));
                }
                if ((ds.Tables["TangGiam"] != null)) {
                    base.Tables.Add(new TangGiamDataTable(ds.Tables["TangGiam"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDSHK = ((DSHKDataTable)(base.Tables["DSHK"]));
            if ((initTable == true)) {
                if ((this.tableDSHK != null)) {
                    this.tableDSHK.InitVars();
                }
            }
            this.tableTK_HK_TTHK = ((TK_HK_TTHKDataTable)(base.Tables["TK_HK_TTHK"]));
            if ((initTable == true)) {
                if ((this.tableTK_HK_TTHK != null)) {
                    this.tableTK_HK_TTHK.InitVars();
                }
            }
            this.tableTK_HK_CHHK = ((TK_HK_CHHKDataTable)(base.Tables["TK_HK_CHHK"]));
            if ((initTable == true)) {
                if ((this.tableTK_HK_CHHK != null)) {
                    this.tableTK_HK_CHHK.InitVars();
                }
            }
            this.tableTK_HK_CHK = ((TK_HK_CHKDataTable)(base.Tables["TK_HK_CHK"]));
            if ((initTable == true)) {
                if ((this.tableTK_HK_CHK != null)) {
                    this.tableTK_HK_CHK.InitVars();
                }
            }
            this.tableTK_NK_TTNK = ((TK_NK_TTNKDataTable)(base.Tables["TK_NK_TTNK"]));
            if ((initTable == true)) {
                if ((this.tableTK_NK_TTNK != null)) {
                    this.tableTK_NK_TTNK.InitVars();
                }
            }
            this.tableTK_NK_CHNK = ((TK_NK_CHNKDataTable)(base.Tables["TK_NK_CHNK"]));
            if ((initTable == true)) {
                if ((this.tableTK_NK_CHNK != null)) {
                    this.tableTK_NK_CHNK.InitVars();
                }
            }
            this.tableTK_NK_CNK = ((TK_NK_CNKDataTable)(base.Tables["TK_NK_CNK"]));
            if ((initTable == true)) {
                if ((this.tableTK_NK_CNK != null)) {
                    this.tableTK_NK_CNK.InitVars();
                }
            }
            this.tableDSNKTheoHK = ((DSNKTheoHKDataTable)(base.Tables["DSNKTheoHK"]));
            if ((initTable == true)) {
                if ((this.tableDSNKTheoHK != null)) {
                    this.tableDSNKTheoHK.InitVars();
                }
            }
            this.tableTK_NK_DT_TTDT = ((TK_NK_DT_TTDTDataTable)(base.Tables["TK_NK_DT_TTDT"]));
            if ((initTable == true)) {
                if ((this.tableTK_NK_DT_TTDT != null)) {
                    this.tableTK_NK_DT_TTDT.InitVars();
                }
            }
            this.tableDSDT = ((DSDTDataTable)(base.Tables["DSDT"]));
            if ((initTable == true)) {
                if ((this.tableDSDT != null)) {
                    this.tableDSDT.InitVars();
                }
            }
            this.tableTangGiam = ((TangGiamDataTable)(base.Tables["TangGiam"]));
            if ((initTable == true)) {
                if ((this.tableTangGiam != null)) {
                    this.tableTangGiam.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet_Report";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_Reportxsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDSHK = new DSHKDataTable();
            base.Tables.Add(this.tableDSHK);
            this.tableTK_HK_TTHK = new TK_HK_TTHKDataTable();
            base.Tables.Add(this.tableTK_HK_TTHK);
            this.tableTK_HK_CHHK = new TK_HK_CHHKDataTable();
            base.Tables.Add(this.tableTK_HK_CHHK);
            this.tableTK_HK_CHK = new TK_HK_CHKDataTable();
            base.Tables.Add(this.tableTK_HK_CHK);
            this.tableTK_NK_TTNK = new TK_NK_TTNKDataTable();
            base.Tables.Add(this.tableTK_NK_TTNK);
            this.tableTK_NK_CHNK = new TK_NK_CHNKDataTable();
            base.Tables.Add(this.tableTK_NK_CHNK);
            this.tableTK_NK_CNK = new TK_NK_CNKDataTable();
            base.Tables.Add(this.tableTK_NK_CNK);
            this.tableDSNKTheoHK = new DSNKTheoHKDataTable();
            base.Tables.Add(this.tableDSNKTheoHK);
            this.tableTK_NK_DT_TTDT = new TK_NK_DT_TTDTDataTable();
            base.Tables.Add(this.tableTK_NK_DT_TTDT);
            this.tableDSDT = new DSDTDataTable();
            base.Tables.Add(this.tableDSDT);
            this.tableTangGiam = new TangGiamDataTable();
            base.Tables.Add(this.tableTangGiam);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDSHK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_HK_TTHK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_HK_CHHK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_HK_CHK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_NK_TTNK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_NK_CHNK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_NK_CNK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDSNKTheoHK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTK_NK_DT_TTDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDSDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTangGiam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_Report ds = new DataSet_Report();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DSHKRowChangeEventHandler(object sender, DSHKRowChangeEvent e);
        
        public delegate void TK_HK_TTHKRowChangeEventHandler(object sender, TK_HK_TTHKRowChangeEvent e);
        
        public delegate void TK_HK_CHHKRowChangeEventHandler(object sender, TK_HK_CHHKRowChangeEvent e);
        
        public delegate void TK_HK_CHKRowChangeEventHandler(object sender, TK_HK_CHKRowChangeEvent e);
        
        public delegate void TK_NK_TTNKRowChangeEventHandler(object sender, TK_NK_TTNKRowChangeEvent e);
        
        public delegate void TK_NK_CHNKRowChangeEventHandler(object sender, TK_NK_CHNKRowChangeEvent e);
        
        public delegate void TK_NK_CNKRowChangeEventHandler(object sender, TK_NK_CNKRowChangeEvent e);
        
        public delegate void DSNKTheoHKRowChangeEventHandler(object sender, DSNKTheoHKRowChangeEvent e);
        
        public delegate void TK_NK_DT_TTDTRowChangeEventHandler(object sender, TK_NK_DT_TTDTRowChangeEvent e);
        
        public delegate void DSDTRowChangeEventHandler(object sender, DSDTRowChangeEvent e);
        
        public delegate void TangGiamRowChangeEventHandler(object sender, TangGiamRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DSHKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHK;
            
            private global::System.Data.DataColumn columnDC;
            
            private global::System.Data.DataColumn columnTINHTRANG;
            
            private global::System.Data.DataColumn columnSLHOKHAU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKDataTable() {
                this.TableName = "DSHK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSHKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DSHKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKColumn {
                get {
                    return this.columnSOHK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCColumn {
                get {
                    return this.columnDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TINHTRANGColumn {
                get {
                    return this.columnTINHTRANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLHOKHAUColumn {
                get {
                    return this.columnSLHOKHAU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKRow this[int index] {
                get {
                    return ((DSHKRow)(this.Rows[index]));
                }
            }
            
            public event DSHKRowChangeEventHandler DSHKRowChanging;
            
            public event DSHKRowChangeEventHandler DSHKRowChanged;
            
            public event DSHKRowChangeEventHandler DSHKRowDeleting;
            
            public event DSHKRowChangeEventHandler DSHKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDSHKRow(DSHKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKRow AddDSHKRow(string SOHK, string DC, string TINHTRANG, string SLHOKHAU) {
                DSHKRow rowDSHKRow = ((DSHKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHK,
                        DC,
                        TINHTRANG,
                        SLHOKHAU};
                rowDSHKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDSHKRow);
                return rowDSHKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DSHKDataTable cln = ((DSHKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DSHKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHK = base.Columns["SOHK"];
                this.columnDC = base.Columns["DC"];
                this.columnTINHTRANG = base.Columns["TINHTRANG"];
                this.columnSLHOKHAU = base.Columns["SLHOKHAU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHK = new global::System.Data.DataColumn("SOHK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHK);
                this.columnDC = new global::System.Data.DataColumn("DC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDC);
                this.columnTINHTRANG = new global::System.Data.DataColumn("TINHTRANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTINHTRANG);
                this.columnSLHOKHAU = new global::System.Data.DataColumn("SLHOKHAU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLHOKHAU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKRow NewDSHKRow() {
                return ((DSHKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DSHKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DSHKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DSHKRowChanged != null)) {
                    this.DSHKRowChanged(this, new DSHKRowChangeEvent(((DSHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DSHKRowChanging != null)) {
                    this.DSHKRowChanging(this, new DSHKRowChangeEvent(((DSHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DSHKRowDeleted != null)) {
                    this.DSHKRowDeleted(this, new DSHKRowChangeEvent(((DSHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DSHKRowDeleting != null)) {
                    this.DSHKRowDeleting(this, new DSHKRowChangeEvent(((DSHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDSHKRow(DSHKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DSHKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_HK_TTHKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHK;
            
            private global::System.Data.DataColumn columnSONHA;
            
            private global::System.Data.DataColumn columnTENDUONG;
            
            private global::System.Data.DataColumn columnPHUONGXA;
            
            private global::System.Data.DataColumn columnQUANHUYEN;
            
            private global::System.Data.DataColumn columnTINHTHANHPHO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKDataTable() {
                this.TableName = "TK_HK_TTHK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_TTHKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_HK_TTHKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKColumn {
                get {
                    return this.columnSOHK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SONHAColumn {
                get {
                    return this.columnSONHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENDUONGColumn {
                get {
                    return this.columnTENDUONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHUONGXAColumn {
                get {
                    return this.columnPHUONGXA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANHUYENColumn {
                get {
                    return this.columnQUANHUYEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TINHTHANHPHOColumn {
                get {
                    return this.columnTINHTHANHPHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKRow this[int index] {
                get {
                    return ((TK_HK_TTHKRow)(this.Rows[index]));
                }
            }
            
            public event TK_HK_TTHKRowChangeEventHandler TK_HK_TTHKRowChanging;
            
            public event TK_HK_TTHKRowChangeEventHandler TK_HK_TTHKRowChanged;
            
            public event TK_HK_TTHKRowChangeEventHandler TK_HK_TTHKRowDeleting;
            
            public event TK_HK_TTHKRowChangeEventHandler TK_HK_TTHKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_HK_TTHKRow(TK_HK_TTHKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKRow AddTK_HK_TTHKRow(string SOHK, string SONHA, string TENDUONG, string PHUONGXA, string QUANHUYEN, string TINHTHANHPHO) {
                TK_HK_TTHKRow rowTK_HK_TTHKRow = ((TK_HK_TTHKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHK,
                        SONHA,
                        TENDUONG,
                        PHUONGXA,
                        QUANHUYEN,
                        TINHTHANHPHO};
                rowTK_HK_TTHKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_HK_TTHKRow);
                return rowTK_HK_TTHKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_HK_TTHKDataTable cln = ((TK_HK_TTHKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_HK_TTHKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHK = base.Columns["SOHK"];
                this.columnSONHA = base.Columns["SONHA"];
                this.columnTENDUONG = base.Columns["TENDUONG"];
                this.columnPHUONGXA = base.Columns["PHUONGXA"];
                this.columnQUANHUYEN = base.Columns["QUANHUYEN"];
                this.columnTINHTHANHPHO = base.Columns["TINHTHANHPHO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHK = new global::System.Data.DataColumn("SOHK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHK);
                this.columnSONHA = new global::System.Data.DataColumn("SONHA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSONHA);
                this.columnTENDUONG = new global::System.Data.DataColumn("TENDUONG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENDUONG);
                this.columnPHUONGXA = new global::System.Data.DataColumn("PHUONGXA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHUONGXA);
                this.columnQUANHUYEN = new global::System.Data.DataColumn("QUANHUYEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANHUYEN);
                this.columnTINHTHANHPHO = new global::System.Data.DataColumn("TINHTHANHPHO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTINHTHANHPHO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKRow NewTK_HK_TTHKRow() {
                return ((TK_HK_TTHKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_HK_TTHKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_HK_TTHKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_HK_TTHKRowChanged != null)) {
                    this.TK_HK_TTHKRowChanged(this, new TK_HK_TTHKRowChangeEvent(((TK_HK_TTHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_HK_TTHKRowChanging != null)) {
                    this.TK_HK_TTHKRowChanging(this, new TK_HK_TTHKRowChangeEvent(((TK_HK_TTHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_HK_TTHKRowDeleted != null)) {
                    this.TK_HK_TTHKRowDeleted(this, new TK_HK_TTHKRowChangeEvent(((TK_HK_TTHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_HK_TTHKRowDeleting != null)) {
                    this.TK_HK_TTHKRowDeleting(this, new TK_HK_TTHKRowChangeEvent(((TK_HK_TTHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_HK_TTHKRow(TK_HK_TTHKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_HK_TTHKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_HK_CHHKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHKCDI;
            
            private global::System.Data.DataColumn columnDCCDI;
            
            private global::System.Data.DataColumn columnSOHKCDEN;
            
            private global::System.Data.DataColumn columnDCCDEN;
            
            private global::System.Data.DataColumn columnNGUOIKYTEN;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnNGAYCDI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKDataTable() {
                this.TableName = "TK_HK_CHHK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_CHHKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_HK_CHHKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKCDIColumn {
                get {
                    return this.columnSOHKCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCCDIColumn {
                get {
                    return this.columnDCCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKCDENColumn {
                get {
                    return this.columnSOHKCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCCDENColumn {
                get {
                    return this.columnDCCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGUOIKYTENColumn {
                get {
                    return this.columnNGUOIKYTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCDIColumn {
                get {
                    return this.columnNGAYCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKRow this[int index] {
                get {
                    return ((TK_HK_CHHKRow)(this.Rows[index]));
                }
            }
            
            public event TK_HK_CHHKRowChangeEventHandler TK_HK_CHHKRowChanging;
            
            public event TK_HK_CHHKRowChangeEventHandler TK_HK_CHHKRowChanged;
            
            public event TK_HK_CHHKRowChangeEventHandler TK_HK_CHHKRowDeleting;
            
            public event TK_HK_CHHKRowChangeEventHandler TK_HK_CHHKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_HK_CHHKRow(TK_HK_CHHKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKRow AddTK_HK_CHHKRow(string SOHKCDI, string DCCDI, string SOHKCDEN, string DCCDEN, string NGUOIKYTEN, string LYDO, string NGAYCDI) {
                TK_HK_CHHKRow rowTK_HK_CHHKRow = ((TK_HK_CHHKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHKCDI,
                        DCCDI,
                        SOHKCDEN,
                        DCCDEN,
                        NGUOIKYTEN,
                        LYDO,
                        NGAYCDI};
                rowTK_HK_CHHKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_HK_CHHKRow);
                return rowTK_HK_CHHKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_HK_CHHKDataTable cln = ((TK_HK_CHHKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_HK_CHHKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHKCDI = base.Columns["SOHKCDI"];
                this.columnDCCDI = base.Columns["DCCDI"];
                this.columnSOHKCDEN = base.Columns["SOHKCDEN"];
                this.columnDCCDEN = base.Columns["DCCDEN"];
                this.columnNGUOIKYTEN = base.Columns["NGUOIKYTEN"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnNGAYCDI = base.Columns["NGAYCDI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHKCDI = new global::System.Data.DataColumn("SOHKCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHKCDI);
                this.columnDCCDI = new global::System.Data.DataColumn("DCCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCCDI);
                this.columnSOHKCDEN = new global::System.Data.DataColumn("SOHKCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHKCDEN);
                this.columnDCCDEN = new global::System.Data.DataColumn("DCCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCCDEN);
                this.columnNGUOIKYTEN = new global::System.Data.DataColumn("NGUOIKYTEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGUOIKYTEN);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnNGAYCDI = new global::System.Data.DataColumn("NGAYCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCDI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKRow NewTK_HK_CHHKRow() {
                return ((TK_HK_CHHKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_HK_CHHKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_HK_CHHKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_HK_CHHKRowChanged != null)) {
                    this.TK_HK_CHHKRowChanged(this, new TK_HK_CHHKRowChangeEvent(((TK_HK_CHHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_HK_CHHKRowChanging != null)) {
                    this.TK_HK_CHHKRowChanging(this, new TK_HK_CHHKRowChangeEvent(((TK_HK_CHHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_HK_CHHKRowDeleted != null)) {
                    this.TK_HK_CHHKRowDeleted(this, new TK_HK_CHHKRowChangeEvent(((TK_HK_CHHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_HK_CHHKRowDeleting != null)) {
                    this.TK_HK_CHHKRowDeleting(this, new TK_HK_CHHKRowChangeEvent(((TK_HK_CHHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_HK_CHHKRow(TK_HK_CHHKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_HK_CHHKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_HK_CHKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHK;
            
            private global::System.Data.DataColumn columnDC;
            
            private global::System.Data.DataColumn columnNGUOIKYTEN;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnNGAYCAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKDataTable() {
                this.TableName = "TK_HK_CHK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_CHKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_HK_CHKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKColumn {
                get {
                    return this.columnSOHK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCColumn {
                get {
                    return this.columnDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGUOIKYTENColumn {
                get {
                    return this.columnNGUOIKYTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCATColumn {
                get {
                    return this.columnNGAYCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKRow this[int index] {
                get {
                    return ((TK_HK_CHKRow)(this.Rows[index]));
                }
            }
            
            public event TK_HK_CHKRowChangeEventHandler TK_HK_CHKRowChanging;
            
            public event TK_HK_CHKRowChangeEventHandler TK_HK_CHKRowChanged;
            
            public event TK_HK_CHKRowChangeEventHandler TK_HK_CHKRowDeleting;
            
            public event TK_HK_CHKRowChangeEventHandler TK_HK_CHKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_HK_CHKRow(TK_HK_CHKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKRow AddTK_HK_CHKRow(string SOHK, string DC, string NGUOIKYTEN, string LYDO, string NGAYCAT) {
                TK_HK_CHKRow rowTK_HK_CHKRow = ((TK_HK_CHKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHK,
                        DC,
                        NGUOIKYTEN,
                        LYDO,
                        NGAYCAT};
                rowTK_HK_CHKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_HK_CHKRow);
                return rowTK_HK_CHKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_HK_CHKDataTable cln = ((TK_HK_CHKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_HK_CHKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHK = base.Columns["SOHK"];
                this.columnDC = base.Columns["DC"];
                this.columnNGUOIKYTEN = base.Columns["NGUOIKYTEN"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnNGAYCAT = base.Columns["NGAYCAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHK = new global::System.Data.DataColumn("SOHK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHK);
                this.columnDC = new global::System.Data.DataColumn("DC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDC);
                this.columnNGUOIKYTEN = new global::System.Data.DataColumn("NGUOIKYTEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGUOIKYTEN);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnNGAYCAT = new global::System.Data.DataColumn("NGAYCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKRow NewTK_HK_CHKRow() {
                return ((TK_HK_CHKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_HK_CHKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_HK_CHKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_HK_CHKRowChanged != null)) {
                    this.TK_HK_CHKRowChanged(this, new TK_HK_CHKRowChangeEvent(((TK_HK_CHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_HK_CHKRowChanging != null)) {
                    this.TK_HK_CHKRowChanging(this, new TK_HK_CHKRowChangeEvent(((TK_HK_CHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_HK_CHKRowDeleted != null)) {
                    this.TK_HK_CHKRowDeleted(this, new TK_HK_CHKRowChangeEvent(((TK_HK_CHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_HK_CHKRowDeleting != null)) {
                    this.TK_HK_CHKRowDeleting(this, new TK_HK_CHKRowChangeEvent(((TK_HK_CHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_HK_CHKRow(TK_HK_CHKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_HK_CHKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_NK_TTNKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnCHULOT;
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnQH;
            
            private global::System.Data.DataColumn columnNGS;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnTDP;
            
            private global::System.Data.DataColumn columnNS;
            
            private global::System.Data.DataColumn columnNQ;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnTG;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnNLV;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnNGAYCAP_CMND;
            
            private global::System.Data.DataColumn columnNOICAP_CMND;
            
            private global::System.Data.DataColumn columnNTNDKTT;
            
            private global::System.Data.DataColumn columnNTTTKCD;
            
            private global::System.Data.DataColumn columnNGAYCDEN;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKDataTable() {
                this.TableName = "TK_NK_TTNK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_TTNKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_NK_TTNKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHULOTColumn {
                get {
                    return this.columnCHULOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QHColumn {
                get {
                    return this.columnQH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGSColumn {
                get {
                    return this.columnNGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDPColumn {
                get {
                    return this.columnTDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NQColumn {
                get {
                    return this.columnNQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGColumn {
                get {
                    return this.columnTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NLVColumn {
                get {
                    return this.columnNLV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCAP_CMNDColumn {
                get {
                    return this.columnNGAYCAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOICAP_CMNDColumn {
                get {
                    return this.columnNOICAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNDKTTColumn {
                get {
                    return this.columnNTNDKTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTTTKCDColumn {
                get {
                    return this.columnNTTTKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCDENColumn {
                get {
                    return this.columnNGAYCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKRow this[int index] {
                get {
                    return ((TK_NK_TTNKRow)(this.Rows[index]));
                }
            }
            
            public event TK_NK_TTNKRowChangeEventHandler TK_NK_TTNKRowChanging;
            
            public event TK_NK_TTNKRowChangeEventHandler TK_NK_TTNKRowChanged;
            
            public event TK_NK_TTNKRowChangeEventHandler TK_NK_TTNKRowDeleting;
            
            public event TK_NK_TTNKRowChangeEventHandler TK_NK_TTNKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_NK_TTNKRow(TK_NK_TTNKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKRow AddTK_NK_TTNKRow(
                        string HO, 
                        string CHULOT, 
                        string TEN, 
                        string QH, 
                        string NGS, 
                        string BIDANH, 
                        int TDP, 
                        string NS, 
                        string NQ, 
                        string SEX, 
                        string DT, 
                        string TG, 
                        string NN, 
                        string NLV, 
                        string CMND, 
                        string NGAYCAP_CMND, 
                        string NOICAP_CMND, 
                        string NTNDKTT, 
                        string NTTTKCD, 
                        string NGAYCDEN, 
                        string LYDO, 
                        string GHICHU) {
                TK_NK_TTNKRow rowTK_NK_TTNKRow = ((TK_NK_TTNKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HO,
                        CHULOT,
                        TEN,
                        QH,
                        NGS,
                        BIDANH,
                        TDP,
                        NS,
                        NQ,
                        SEX,
                        DT,
                        TG,
                        NN,
                        NLV,
                        CMND,
                        NGAYCAP_CMND,
                        NOICAP_CMND,
                        NTNDKTT,
                        NTTTKCD,
                        NGAYCDEN,
                        LYDO,
                        GHICHU};
                rowTK_NK_TTNKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_NK_TTNKRow);
                return rowTK_NK_TTNKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_NK_TTNKDataTable cln = ((TK_NK_TTNKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_NK_TTNKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHO = base.Columns["HO"];
                this.columnCHULOT = base.Columns["CHULOT"];
                this.columnTEN = base.Columns["TEN"];
                this.columnQH = base.Columns["QH"];
                this.columnNGS = base.Columns["NGS"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnTDP = base.Columns["TDP"];
                this.columnNS = base.Columns["NS"];
                this.columnNQ = base.Columns["NQ"];
                this.columnSEX = base.Columns["SEX"];
                this.columnDT = base.Columns["DT"];
                this.columnTG = base.Columns["TG"];
                this.columnNN = base.Columns["NN"];
                this.columnNLV = base.Columns["NLV"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNGAYCAP_CMND = base.Columns["NGAYCAP_CMND"];
                this.columnNOICAP_CMND = base.Columns["NOICAP_CMND"];
                this.columnNTNDKTT = base.Columns["NTNDKTT"];
                this.columnNTTTKCD = base.Columns["NTTTKCD"];
                this.columnNGAYCDEN = base.Columns["NGAYCDEN"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnGHICHU = base.Columns["GHICHU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnCHULOT = new global::System.Data.DataColumn("CHULOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHULOT);
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnQH = new global::System.Data.DataColumn("QH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQH);
                this.columnNGS = new global::System.Data.DataColumn("NGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGS);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnTDP = new global::System.Data.DataColumn("TDP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDP);
                this.columnNS = new global::System.Data.DataColumn("NS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnNQ = new global::System.Data.DataColumn("NQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNQ);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnTG = new global::System.Data.DataColumn("TG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTG);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnNLV = new global::System.Data.DataColumn("NLV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLV);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNGAYCAP_CMND = new global::System.Data.DataColumn("NGAYCAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAP_CMND);
                this.columnNOICAP_CMND = new global::System.Data.DataColumn("NOICAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOICAP_CMND);
                this.columnNTNDKTT = new global::System.Data.DataColumn("NTNDKTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNDKTT);
                this.columnNTTTKCD = new global::System.Data.DataColumn("NTTTKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTTTKCD);
                this.columnNGAYCDEN = new global::System.Data.DataColumn("NGAYCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCDEN);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKRow NewTK_NK_TTNKRow() {
                return ((TK_NK_TTNKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_NK_TTNKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_NK_TTNKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_NK_TTNKRowChanged != null)) {
                    this.TK_NK_TTNKRowChanged(this, new TK_NK_TTNKRowChangeEvent(((TK_NK_TTNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_NK_TTNKRowChanging != null)) {
                    this.TK_NK_TTNKRowChanging(this, new TK_NK_TTNKRowChangeEvent(((TK_NK_TTNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_NK_TTNKRowDeleted != null)) {
                    this.TK_NK_TTNKRowDeleted(this, new TK_NK_TTNKRowChangeEvent(((TK_NK_TTNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_NK_TTNKRowDeleting != null)) {
                    this.TK_NK_TTNKRowDeleting(this, new TK_NK_TTNKRowChangeEvent(((TK_NK_TTNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_NK_TTNKRow(TK_NK_TTNKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_NK_TTNKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_NK_CHNKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHKCDEN;
            
            private global::System.Data.DataColumn columnDCCDEN;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnCHULOT;
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnQH;
            
            private global::System.Data.DataColumn columnNGS;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnTDP;
            
            private global::System.Data.DataColumn columnNS;
            
            private global::System.Data.DataColumn columnNQ;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnTG;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnNLV;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnNGAYCAP_CMND;
            
            private global::System.Data.DataColumn columnNOICAP_CMND;
            
            private global::System.Data.DataColumn columnNTNDKTT;
            
            private global::System.Data.DataColumn columnNGAYCDI;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            private global::System.Data.DataColumn columnSOHKDI;
            
            private global::System.Data.DataColumn columnDCDI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKDataTable() {
                this.TableName = "TK_NK_CHNK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_CHNKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_NK_CHNKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKCDENColumn {
                get {
                    return this.columnSOHKCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCCDENColumn {
                get {
                    return this.columnDCCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHULOTColumn {
                get {
                    return this.columnCHULOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QHColumn {
                get {
                    return this.columnQH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGSColumn {
                get {
                    return this.columnNGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDPColumn {
                get {
                    return this.columnTDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NQColumn {
                get {
                    return this.columnNQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGColumn {
                get {
                    return this.columnTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NLVColumn {
                get {
                    return this.columnNLV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCAP_CMNDColumn {
                get {
                    return this.columnNGAYCAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOICAP_CMNDColumn {
                get {
                    return this.columnNOICAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNDKTTColumn {
                get {
                    return this.columnNTNDKTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCDIColumn {
                get {
                    return this.columnNGAYCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKDIColumn {
                get {
                    return this.columnSOHKDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCDIColumn {
                get {
                    return this.columnDCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKRow this[int index] {
                get {
                    return ((TK_NK_CHNKRow)(this.Rows[index]));
                }
            }
            
            public event TK_NK_CHNKRowChangeEventHandler TK_NK_CHNKRowChanging;
            
            public event TK_NK_CHNKRowChangeEventHandler TK_NK_CHNKRowChanged;
            
            public event TK_NK_CHNKRowChangeEventHandler TK_NK_CHNKRowDeleting;
            
            public event TK_NK_CHNKRowChangeEventHandler TK_NK_CHNKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_NK_CHNKRow(TK_NK_CHNKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKRow AddTK_NK_CHNKRow(
                        string SOHKCDEN, 
                        string DCCDEN, 
                        string HO, 
                        string CHULOT, 
                        string TEN, 
                        string QH, 
                        string NGS, 
                        string BIDANH, 
                        int TDP, 
                        string NS, 
                        string NQ, 
                        string SEX, 
                        string DT, 
                        string TG, 
                        string NN, 
                        string NLV, 
                        string CMND, 
                        string NGAYCAP_CMND, 
                        string NOICAP_CMND, 
                        string NTNDKTT, 
                        string NGAYCDI, 
                        string LYDO, 
                        string GHICHU, 
                        int SOHKDI, 
                        string DCDI) {
                TK_NK_CHNKRow rowTK_NK_CHNKRow = ((TK_NK_CHNKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHKCDEN,
                        DCCDEN,
                        HO,
                        CHULOT,
                        TEN,
                        QH,
                        NGS,
                        BIDANH,
                        TDP,
                        NS,
                        NQ,
                        SEX,
                        DT,
                        TG,
                        NN,
                        NLV,
                        CMND,
                        NGAYCAP_CMND,
                        NOICAP_CMND,
                        NTNDKTT,
                        NGAYCDI,
                        LYDO,
                        GHICHU,
                        SOHKDI,
                        DCDI};
                rowTK_NK_CHNKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_NK_CHNKRow);
                return rowTK_NK_CHNKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_NK_CHNKDataTable cln = ((TK_NK_CHNKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_NK_CHNKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHKCDEN = base.Columns["SOHKCDEN"];
                this.columnDCCDEN = base.Columns["DCCDEN"];
                this.columnHO = base.Columns["HO"];
                this.columnCHULOT = base.Columns["CHULOT"];
                this.columnTEN = base.Columns["TEN"];
                this.columnQH = base.Columns["QH"];
                this.columnNGS = base.Columns["NGS"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnTDP = base.Columns["TDP"];
                this.columnNS = base.Columns["NS"];
                this.columnNQ = base.Columns["NQ"];
                this.columnSEX = base.Columns["SEX"];
                this.columnDT = base.Columns["DT"];
                this.columnTG = base.Columns["TG"];
                this.columnNN = base.Columns["NN"];
                this.columnNLV = base.Columns["NLV"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNGAYCAP_CMND = base.Columns["NGAYCAP_CMND"];
                this.columnNOICAP_CMND = base.Columns["NOICAP_CMND"];
                this.columnNTNDKTT = base.Columns["NTNDKTT"];
                this.columnNGAYCDI = base.Columns["NGAYCDI"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnGHICHU = base.Columns["GHICHU"];
                this.columnSOHKDI = base.Columns["SOHKDI"];
                this.columnDCDI = base.Columns["DCDI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHKCDEN = new global::System.Data.DataColumn("SOHKCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHKCDEN);
                this.columnDCCDEN = new global::System.Data.DataColumn("DCCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCCDEN);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnCHULOT = new global::System.Data.DataColumn("CHULOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHULOT);
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnQH = new global::System.Data.DataColumn("QH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQH);
                this.columnNGS = new global::System.Data.DataColumn("NGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGS);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnTDP = new global::System.Data.DataColumn("TDP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDP);
                this.columnNS = new global::System.Data.DataColumn("NS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnNQ = new global::System.Data.DataColumn("NQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNQ);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnTG = new global::System.Data.DataColumn("TG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTG);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnNLV = new global::System.Data.DataColumn("NLV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLV);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNGAYCAP_CMND = new global::System.Data.DataColumn("NGAYCAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAP_CMND);
                this.columnNOICAP_CMND = new global::System.Data.DataColumn("NOICAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOICAP_CMND);
                this.columnNTNDKTT = new global::System.Data.DataColumn("NTNDKTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNDKTT);
                this.columnNGAYCDI = new global::System.Data.DataColumn("NGAYCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCDI);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
                this.columnSOHKDI = new global::System.Data.DataColumn("SOHKDI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHKDI);
                this.columnDCDI = new global::System.Data.DataColumn("DCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCDI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKRow NewTK_NK_CHNKRow() {
                return ((TK_NK_CHNKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_NK_CHNKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_NK_CHNKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_NK_CHNKRowChanged != null)) {
                    this.TK_NK_CHNKRowChanged(this, new TK_NK_CHNKRowChangeEvent(((TK_NK_CHNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_NK_CHNKRowChanging != null)) {
                    this.TK_NK_CHNKRowChanging(this, new TK_NK_CHNKRowChangeEvent(((TK_NK_CHNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_NK_CHNKRowDeleted != null)) {
                    this.TK_NK_CHNKRowDeleted(this, new TK_NK_CHNKRowChangeEvent(((TK_NK_CHNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_NK_CHNKRowDeleting != null)) {
                    this.TK_NK_CHNKRowDeleting(this, new TK_NK_CHNKRowChangeEvent(((TK_NK_CHNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_NK_CHNKRow(TK_NK_CHNKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_NK_CHNKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_NK_CNKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnCHULOT;
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnQH;
            
            private global::System.Data.DataColumn columnNGS;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnTDP;
            
            private global::System.Data.DataColumn columnNS;
            
            private global::System.Data.DataColumn columnNQ;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnTG;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnNLV;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnNGAYCAP_CMND;
            
            private global::System.Data.DataColumn columnNOICAP_CMND;
            
            private global::System.Data.DataColumn columnNTNDKTT;
            
            private global::System.Data.DataColumn columnNGAYCDI;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKDataTable() {
                this.TableName = "TK_NK_CNK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_CNKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_NK_CNKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHULOTColumn {
                get {
                    return this.columnCHULOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QHColumn {
                get {
                    return this.columnQH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGSColumn {
                get {
                    return this.columnNGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDPColumn {
                get {
                    return this.columnTDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NQColumn {
                get {
                    return this.columnNQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGColumn {
                get {
                    return this.columnTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NLVColumn {
                get {
                    return this.columnNLV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCAP_CMNDColumn {
                get {
                    return this.columnNGAYCAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOICAP_CMNDColumn {
                get {
                    return this.columnNOICAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNDKTTColumn {
                get {
                    return this.columnNTNDKTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCDIColumn {
                get {
                    return this.columnNGAYCDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKRow this[int index] {
                get {
                    return ((TK_NK_CNKRow)(this.Rows[index]));
                }
            }
            
            public event TK_NK_CNKRowChangeEventHandler TK_NK_CNKRowChanging;
            
            public event TK_NK_CNKRowChangeEventHandler TK_NK_CNKRowChanged;
            
            public event TK_NK_CNKRowChangeEventHandler TK_NK_CNKRowDeleting;
            
            public event TK_NK_CNKRowChangeEventHandler TK_NK_CNKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_NK_CNKRow(TK_NK_CNKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKRow AddTK_NK_CNKRow(
                        string HO, 
                        string CHULOT, 
                        string TEN, 
                        string QH, 
                        string NGS, 
                        string BIDANH, 
                        int TDP, 
                        string NS, 
                        string NQ, 
                        string SEX, 
                        string DT, 
                        string TG, 
                        string NN, 
                        string NLV, 
                        string CMND, 
                        string NGAYCAP_CMND, 
                        string NOICAP_CMND, 
                        string NTNDKTT, 
                        string NGAYCDI, 
                        string LYDO, 
                        string GHICHU) {
                TK_NK_CNKRow rowTK_NK_CNKRow = ((TK_NK_CNKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HO,
                        CHULOT,
                        TEN,
                        QH,
                        NGS,
                        BIDANH,
                        TDP,
                        NS,
                        NQ,
                        SEX,
                        DT,
                        TG,
                        NN,
                        NLV,
                        CMND,
                        NGAYCAP_CMND,
                        NOICAP_CMND,
                        NTNDKTT,
                        NGAYCDI,
                        LYDO,
                        GHICHU};
                rowTK_NK_CNKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_NK_CNKRow);
                return rowTK_NK_CNKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_NK_CNKDataTable cln = ((TK_NK_CNKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_NK_CNKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHO = base.Columns["HO"];
                this.columnCHULOT = base.Columns["CHULOT"];
                this.columnTEN = base.Columns["TEN"];
                this.columnQH = base.Columns["QH"];
                this.columnNGS = base.Columns["NGS"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnTDP = base.Columns["TDP"];
                this.columnNS = base.Columns["NS"];
                this.columnNQ = base.Columns["NQ"];
                this.columnSEX = base.Columns["SEX"];
                this.columnDT = base.Columns["DT"];
                this.columnTG = base.Columns["TG"];
                this.columnNN = base.Columns["NN"];
                this.columnNLV = base.Columns["NLV"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNGAYCAP_CMND = base.Columns["NGAYCAP_CMND"];
                this.columnNOICAP_CMND = base.Columns["NOICAP_CMND"];
                this.columnNTNDKTT = base.Columns["NTNDKTT"];
                this.columnNGAYCDI = base.Columns["NGAYCDI"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnGHICHU = base.Columns["GHICHU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnCHULOT = new global::System.Data.DataColumn("CHULOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHULOT);
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnQH = new global::System.Data.DataColumn("QH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQH);
                this.columnNGS = new global::System.Data.DataColumn("NGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGS);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnTDP = new global::System.Data.DataColumn("TDP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDP);
                this.columnNS = new global::System.Data.DataColumn("NS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnNQ = new global::System.Data.DataColumn("NQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNQ);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnTG = new global::System.Data.DataColumn("TG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTG);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnNLV = new global::System.Data.DataColumn("NLV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLV);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNGAYCAP_CMND = new global::System.Data.DataColumn("NGAYCAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAP_CMND);
                this.columnNOICAP_CMND = new global::System.Data.DataColumn("NOICAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOICAP_CMND);
                this.columnNTNDKTT = new global::System.Data.DataColumn("NTNDKTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNDKTT);
                this.columnNGAYCDI = new global::System.Data.DataColumn("NGAYCDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCDI);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKRow NewTK_NK_CNKRow() {
                return ((TK_NK_CNKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_NK_CNKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_NK_CNKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_NK_CNKRowChanged != null)) {
                    this.TK_NK_CNKRowChanged(this, new TK_NK_CNKRowChangeEvent(((TK_NK_CNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_NK_CNKRowChanging != null)) {
                    this.TK_NK_CNKRowChanging(this, new TK_NK_CNKRowChangeEvent(((TK_NK_CNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_NK_CNKRowDeleted != null)) {
                    this.TK_NK_CNKRowDeleted(this, new TK_NK_CNKRowChangeEvent(((TK_NK_CNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_NK_CNKRowDeleting != null)) {
                    this.TK_NK_CNKRowDeleting(this, new TK_NK_CNKRowChangeEvent(((TK_NK_CNKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_NK_CNKRow(TK_NK_CNKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_NK_CNKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DSNKTheoHKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSOHK;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnCHULOT;
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnQH;
            
            private global::System.Data.DataColumn columnNGS;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnTDP;
            
            private global::System.Data.DataColumn columnNS;
            
            private global::System.Data.DataColumn columnNQ;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnTG;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnNLV;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnNGAYCAP_CMND;
            
            private global::System.Data.DataColumn columnNOICAP_CMND;
            
            private global::System.Data.DataColumn columnNTNDKTT;
            
            private global::System.Data.DataColumn columnNTTTKCD;
            
            private global::System.Data.DataColumn columnNGAYCDEN;
            
            private global::System.Data.DataColumn columnLYDO;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKDataTable() {
                this.TableName = "DSNKTheoHK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSNKTheoHKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DSNKTheoHKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOHKColumn {
                get {
                    return this.columnSOHK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHULOTColumn {
                get {
                    return this.columnCHULOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QHColumn {
                get {
                    return this.columnQH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGSColumn {
                get {
                    return this.columnNGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDPColumn {
                get {
                    return this.columnTDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSColumn {
                get {
                    return this.columnNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NQColumn {
                get {
                    return this.columnNQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGColumn {
                get {
                    return this.columnTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NLVColumn {
                get {
                    return this.columnNLV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCAP_CMNDColumn {
                get {
                    return this.columnNGAYCAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOICAP_CMNDColumn {
                get {
                    return this.columnNOICAP_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNDKTTColumn {
                get {
                    return this.columnNTNDKTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTTTKCDColumn {
                get {
                    return this.columnNTTTKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYCDENColumn {
                get {
                    return this.columnNGAYCDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LYDOColumn {
                get {
                    return this.columnLYDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKRow this[int index] {
                get {
                    return ((DSNKTheoHKRow)(this.Rows[index]));
                }
            }
            
            public event DSNKTheoHKRowChangeEventHandler DSNKTheoHKRowChanging;
            
            public event DSNKTheoHKRowChangeEventHandler DSNKTheoHKRowChanged;
            
            public event DSNKTheoHKRowChangeEventHandler DSNKTheoHKRowDeleting;
            
            public event DSNKTheoHKRowChangeEventHandler DSNKTheoHKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDSNKTheoHKRow(DSNKTheoHKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKRow AddDSNKTheoHKRow(
                        string SOHK, 
                        string HO, 
                        string CHULOT, 
                        string TEN, 
                        string QH, 
                        string NGS, 
                        string BIDANH, 
                        int TDP, 
                        string NS, 
                        string NQ, 
                        string SEX, 
                        string DT, 
                        string TG, 
                        string NN, 
                        string NLV, 
                        string CMND, 
                        string NGAYCAP_CMND, 
                        string NOICAP_CMND, 
                        string NTNDKTT, 
                        string NTTTKCD, 
                        string NGAYCDEN, 
                        string LYDO, 
                        string GHICHU) {
                DSNKTheoHKRow rowDSNKTheoHKRow = ((DSNKTheoHKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SOHK,
                        HO,
                        CHULOT,
                        TEN,
                        QH,
                        NGS,
                        BIDANH,
                        TDP,
                        NS,
                        NQ,
                        SEX,
                        DT,
                        TG,
                        NN,
                        NLV,
                        CMND,
                        NGAYCAP_CMND,
                        NOICAP_CMND,
                        NTNDKTT,
                        NTTTKCD,
                        NGAYCDEN,
                        LYDO,
                        GHICHU};
                rowDSNKTheoHKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDSNKTheoHKRow);
                return rowDSNKTheoHKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DSNKTheoHKDataTable cln = ((DSNKTheoHKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DSNKTheoHKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOHK = base.Columns["SOHK"];
                this.columnHO = base.Columns["HO"];
                this.columnCHULOT = base.Columns["CHULOT"];
                this.columnTEN = base.Columns["TEN"];
                this.columnQH = base.Columns["QH"];
                this.columnNGS = base.Columns["NGS"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnTDP = base.Columns["TDP"];
                this.columnNS = base.Columns["NS"];
                this.columnNQ = base.Columns["NQ"];
                this.columnSEX = base.Columns["SEX"];
                this.columnDT = base.Columns["DT"];
                this.columnTG = base.Columns["TG"];
                this.columnNN = base.Columns["NN"];
                this.columnNLV = base.Columns["NLV"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNGAYCAP_CMND = base.Columns["NGAYCAP_CMND"];
                this.columnNOICAP_CMND = base.Columns["NOICAP_CMND"];
                this.columnNTNDKTT = base.Columns["NTNDKTT"];
                this.columnNTTTKCD = base.Columns["NTTTKCD"];
                this.columnNGAYCDEN = base.Columns["NGAYCDEN"];
                this.columnLYDO = base.Columns["LYDO"];
                this.columnGHICHU = base.Columns["GHICHU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOHK = new global::System.Data.DataColumn("SOHK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOHK);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnCHULOT = new global::System.Data.DataColumn("CHULOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHULOT);
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnQH = new global::System.Data.DataColumn("QH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQH);
                this.columnNGS = new global::System.Data.DataColumn("NGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGS);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnTDP = new global::System.Data.DataColumn("TDP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDP);
                this.columnNS = new global::System.Data.DataColumn("NS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNS);
                this.columnNQ = new global::System.Data.DataColumn("NQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNQ);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnTG = new global::System.Data.DataColumn("TG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTG);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnNLV = new global::System.Data.DataColumn("NLV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLV);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNGAYCAP_CMND = new global::System.Data.DataColumn("NGAYCAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCAP_CMND);
                this.columnNOICAP_CMND = new global::System.Data.DataColumn("NOICAP_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOICAP_CMND);
                this.columnNTNDKTT = new global::System.Data.DataColumn("NTNDKTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNDKTT);
                this.columnNTTTKCD = new global::System.Data.DataColumn("NTTTKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTTTKCD);
                this.columnNGAYCDEN = new global::System.Data.DataColumn("NGAYCDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYCDEN);
                this.columnLYDO = new global::System.Data.DataColumn("LYDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLYDO);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKRow NewDSNKTheoHKRow() {
                return ((DSNKTheoHKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DSNKTheoHKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DSNKTheoHKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DSNKTheoHKRowChanged != null)) {
                    this.DSNKTheoHKRowChanged(this, new DSNKTheoHKRowChangeEvent(((DSNKTheoHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DSNKTheoHKRowChanging != null)) {
                    this.DSNKTheoHKRowChanging(this, new DSNKTheoHKRowChangeEvent(((DSNKTheoHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DSNKTheoHKRowDeleted != null)) {
                    this.DSNKTheoHKRowDeleted(this, new DSNKTheoHKRowChangeEvent(((DSNKTheoHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DSNKTheoHKRowDeleting != null)) {
                    this.DSNKTheoHKRowDeleting(this, new DSNKTheoHKRowChangeEvent(((DSNKTheoHKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDSNKTheoHKRow(DSNKTheoHKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DSNKTheoHKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TK_NK_DT_TTDTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnNGAYSINH;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnLOAIDT;
            
            private global::System.Data.DataColumn columnQHCH;
            
            private global::System.Data.DataColumn columnNSINH;
            
            private global::System.Data.DataColumn columnNQUAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTDataTable() {
                this.TableName = "TK_NK_DT_TTDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_DT_TTDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TK_NK_DT_TTDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYSINHColumn {
                get {
                    return this.columnNGAYSINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOAIDTColumn {
                get {
                    return this.columnLOAIDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QHCHColumn {
                get {
                    return this.columnQHCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NSINHColumn {
                get {
                    return this.columnNSINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NQUANColumn {
                get {
                    return this.columnNQUAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTRow this[int index] {
                get {
                    return ((TK_NK_DT_TTDTRow)(this.Rows[index]));
                }
            }
            
            public event TK_NK_DT_TTDTRowChangeEventHandler TK_NK_DT_TTDTRowChanging;
            
            public event TK_NK_DT_TTDTRowChangeEventHandler TK_NK_DT_TTDTRowChanged;
            
            public event TK_NK_DT_TTDTRowChangeEventHandler TK_NK_DT_TTDTRowDeleting;
            
            public event TK_NK_DT_TTDTRowChangeEventHandler TK_NK_DT_TTDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTK_NK_DT_TTDTRow(TK_NK_DT_TTDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTRow AddTK_NK_DT_TTDTRow(string TEN, string CMND, string SEX, string NGAYSINH, string BIDANH, string LOAIDT, string QHCH, string NSINH, string NQUAN) {
                TK_NK_DT_TTDTRow rowTK_NK_DT_TTDTRow = ((TK_NK_DT_TTDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TEN,
                        CMND,
                        SEX,
                        NGAYSINH,
                        BIDANH,
                        LOAIDT,
                        QHCH,
                        NSINH,
                        NQUAN};
                rowTK_NK_DT_TTDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTK_NK_DT_TTDTRow);
                return rowTK_NK_DT_TTDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TK_NK_DT_TTDTDataTable cln = ((TK_NK_DT_TTDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TK_NK_DT_TTDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEN = base.Columns["TEN"];
                this.columnCMND = base.Columns["CMND"];
                this.columnSEX = base.Columns["SEX"];
                this.columnNGAYSINH = base.Columns["NGAYSINH"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnLOAIDT = base.Columns["LOAIDT"];
                this.columnQHCH = base.Columns["QHCH"];
                this.columnNSINH = base.Columns["NSINH"];
                this.columnNQUAN = base.Columns["NQUAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnNGAYSINH = new global::System.Data.DataColumn("NGAYSINH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYSINH);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnLOAIDT = new global::System.Data.DataColumn("LOAIDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAIDT);
                this.columnQHCH = new global::System.Data.DataColumn("QHCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQHCH);
                this.columnNSINH = new global::System.Data.DataColumn("NSINH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSINH);
                this.columnNQUAN = new global::System.Data.DataColumn("NQUAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNQUAN);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTRow NewTK_NK_DT_TTDTRow() {
                return ((TK_NK_DT_TTDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TK_NK_DT_TTDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TK_NK_DT_TTDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TK_NK_DT_TTDTRowChanged != null)) {
                    this.TK_NK_DT_TTDTRowChanged(this, new TK_NK_DT_TTDTRowChangeEvent(((TK_NK_DT_TTDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TK_NK_DT_TTDTRowChanging != null)) {
                    this.TK_NK_DT_TTDTRowChanging(this, new TK_NK_DT_TTDTRowChangeEvent(((TK_NK_DT_TTDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TK_NK_DT_TTDTRowDeleted != null)) {
                    this.TK_NK_DT_TTDTRowDeleted(this, new TK_NK_DT_TTDTRowChangeEvent(((TK_NK_DT_TTDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TK_NK_DT_TTDTRowDeleting != null)) {
                    this.TK_NK_DT_TTDTRowDeleting(this, new TK_NK_DT_TTDTRowChangeEvent(((TK_NK_DT_TTDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTK_NK_DT_TTDTRow(TK_NK_DT_TTDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TK_NK_DT_TTDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DSDTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTEN;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnNGSINH;
            
            private global::System.Data.DataColumn columnBIDANH;
            
            private global::System.Data.DataColumn columnLOAIDT;
            
            private global::System.Data.DataColumn columnNGVP;
            
            private global::System.Data.DataColumn columnTOIDANH;
            
            private global::System.Data.DataColumn columnLOAIHINHDT;
            
            private global::System.Data.DataColumn columnMUCQL;
            
            private global::System.Data.DataColumn columnMADT;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTDataTable() {
                this.TableName = "DSDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DSDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENColumn {
                get {
                    return this.columnTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGSINHColumn {
                get {
                    return this.columnNGSINH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIDANHColumn {
                get {
                    return this.columnBIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOAIDTColumn {
                get {
                    return this.columnLOAIDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGVPColumn {
                get {
                    return this.columnNGVP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOIDANHColumn {
                get {
                    return this.columnTOIDANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOAIHINHDTColumn {
                get {
                    return this.columnLOAIHINHDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUCQLColumn {
                get {
                    return this.columnMUCQL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADTColumn {
                get {
                    return this.columnMADT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTRow this[int index] {
                get {
                    return ((DSDTRow)(this.Rows[index]));
                }
            }
            
            public event DSDTRowChangeEventHandler DSDTRowChanging;
            
            public event DSDTRowChangeEventHandler DSDTRowChanged;
            
            public event DSDTRowChangeEventHandler DSDTRowDeleting;
            
            public event DSDTRowChangeEventHandler DSDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDSDTRow(DSDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTRow AddDSDTRow(string TEN, string CMND, string NGSINH, string BIDANH, string LOAIDT, string NGVP, string TOIDANH, string LOAIHINHDT, string MUCQL, string MADT, string GHICHU) {
                DSDTRow rowDSDTRow = ((DSDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TEN,
                        CMND,
                        NGSINH,
                        BIDANH,
                        LOAIDT,
                        NGVP,
                        TOIDANH,
                        LOAIHINHDT,
                        MUCQL,
                        MADT,
                        GHICHU};
                rowDSDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDSDTRow);
                return rowDSDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DSDTDataTable cln = ((DSDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DSDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEN = base.Columns["TEN"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNGSINH = base.Columns["NGSINH"];
                this.columnBIDANH = base.Columns["BIDANH"];
                this.columnLOAIDT = base.Columns["LOAIDT"];
                this.columnNGVP = base.Columns["NGVP"];
                this.columnTOIDANH = base.Columns["TOIDANH"];
                this.columnLOAIHINHDT = base.Columns["LOAIHINHDT"];
                this.columnMUCQL = base.Columns["MUCQL"];
                this.columnMADT = base.Columns["MADT"];
                this.columnGHICHU = base.Columns["GHICHU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEN = new global::System.Data.DataColumn("TEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNGSINH = new global::System.Data.DataColumn("NGSINH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGSINH);
                this.columnBIDANH = new global::System.Data.DataColumn("BIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIDANH);
                this.columnLOAIDT = new global::System.Data.DataColumn("LOAIDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAIDT);
                this.columnNGVP = new global::System.Data.DataColumn("NGVP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGVP);
                this.columnTOIDANH = new global::System.Data.DataColumn("TOIDANH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOIDANH);
                this.columnLOAIHINHDT = new global::System.Data.DataColumn("LOAIHINHDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAIHINHDT);
                this.columnMUCQL = new global::System.Data.DataColumn("MUCQL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUCQL);
                this.columnMADT = new global::System.Data.DataColumn("MADT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADT);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTRow NewDSDTRow() {
                return ((DSDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DSDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DSDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DSDTRowChanged != null)) {
                    this.DSDTRowChanged(this, new DSDTRowChangeEvent(((DSDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DSDTRowChanging != null)) {
                    this.DSDTRowChanging(this, new DSDTRowChangeEvent(((DSDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DSDTRowDeleted != null)) {
                    this.DSDTRowDeleted(this, new DSDTRowChangeEvent(((DSDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DSDTRowDeleting != null)) {
                    this.DSDTRowDeleting(this, new DSDTRowChangeEvent(((DSDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDSDTRow(DSDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DSDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TangGiamDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTHANG;
            
            private global::System.Data.DataColumn columnHKHT;
            
            private global::System.Data.DataColumn columnHKTRUOC;
            
            private global::System.Data.DataColumn columnHKDEN;
            
            private global::System.Data.DataColumn columnHKDI;
            
            private global::System.Data.DataColumn columnHKTG;
            
            private global::System.Data.DataColumn columnNKHT;
            
            private global::System.Data.DataColumn columnNKTRUOC;
            
            private global::System.Data.DataColumn columnNKDEN;
            
            private global::System.Data.DataColumn columnNKDI;
            
            private global::System.Data.DataColumn columnNKTG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamDataTable() {
                this.TableName = "TangGiam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TangGiamDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TangGiamDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANGColumn {
                get {
                    return this.columnTHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKHTColumn {
                get {
                    return this.columnHKHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKTRUOCColumn {
                get {
                    return this.columnHKTRUOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKDENColumn {
                get {
                    return this.columnHKDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKDIColumn {
                get {
                    return this.columnHKDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKTGColumn {
                get {
                    return this.columnHKTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NKHTColumn {
                get {
                    return this.columnNKHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NKTRUOCColumn {
                get {
                    return this.columnNKTRUOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NKDENColumn {
                get {
                    return this.columnNKDEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NKDIColumn {
                get {
                    return this.columnNKDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NKTGColumn {
                get {
                    return this.columnNKTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamRow this[int index] {
                get {
                    return ((TangGiamRow)(this.Rows[index]));
                }
            }
            
            public event TangGiamRowChangeEventHandler TangGiamRowChanging;
            
            public event TangGiamRowChangeEventHandler TangGiamRowChanged;
            
            public event TangGiamRowChangeEventHandler TangGiamRowDeleting;
            
            public event TangGiamRowChangeEventHandler TangGiamRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTangGiamRow(TangGiamRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamRow AddTangGiamRow(string THANG, string HKHT, string HKTRUOC, string HKDEN, string HKDI, string HKTG, string NKHT, string NKTRUOC, string NKDEN, string NKDI, string NKTG) {
                TangGiamRow rowTangGiamRow = ((TangGiamRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        THANG,
                        HKHT,
                        HKTRUOC,
                        HKDEN,
                        HKDI,
                        HKTG,
                        NKHT,
                        NKTRUOC,
                        NKDEN,
                        NKDI,
                        NKTG};
                rowTangGiamRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTangGiamRow);
                return rowTangGiamRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TangGiamDataTable cln = ((TangGiamDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TangGiamDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTHANG = base.Columns["THANG"];
                this.columnHKHT = base.Columns["HKHT"];
                this.columnHKTRUOC = base.Columns["HKTRUOC"];
                this.columnHKDEN = base.Columns["HKDEN"];
                this.columnHKDI = base.Columns["HKDI"];
                this.columnHKTG = base.Columns["HKTG"];
                this.columnNKHT = base.Columns["NKHT"];
                this.columnNKTRUOC = base.Columns["NKTRUOC"];
                this.columnNKDEN = base.Columns["NKDEN"];
                this.columnNKDI = base.Columns["NKDI"];
                this.columnNKTG = base.Columns["NKTG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTHANG = new global::System.Data.DataColumn("THANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANG);
                this.columnHKHT = new global::System.Data.DataColumn("HKHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKHT);
                this.columnHKTRUOC = new global::System.Data.DataColumn("HKTRUOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKTRUOC);
                this.columnHKDEN = new global::System.Data.DataColumn("HKDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKDEN);
                this.columnHKDI = new global::System.Data.DataColumn("HKDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKDI);
                this.columnHKTG = new global::System.Data.DataColumn("HKTG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKTG);
                this.columnNKHT = new global::System.Data.DataColumn("NKHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKHT);
                this.columnNKTRUOC = new global::System.Data.DataColumn("NKTRUOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKTRUOC);
                this.columnNKDEN = new global::System.Data.DataColumn("NKDEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKDEN);
                this.columnNKDI = new global::System.Data.DataColumn("NKDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKDI);
                this.columnNKTG = new global::System.Data.DataColumn("NKTG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNKTG);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamRow NewTangGiamRow() {
                return ((TangGiamRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TangGiamRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TangGiamRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TangGiamRowChanged != null)) {
                    this.TangGiamRowChanged(this, new TangGiamRowChangeEvent(((TangGiamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TangGiamRowChanging != null)) {
                    this.TangGiamRowChanging(this, new TangGiamRowChangeEvent(((TangGiamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TangGiamRowDeleted != null)) {
                    this.TangGiamRowDeleted(this, new TangGiamRowChangeEvent(((TangGiamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TangGiamRowDeleting != null)) {
                    this.TangGiamRowDeleting(this, new TangGiamRowChangeEvent(((TangGiamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTangGiamRow(TangGiamRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Report ds = new DataSet_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TangGiamDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DSHKRow : global::System.Data.DataRow {
            
            private DSHKDataTable tableDSHK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSHKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDSHK = ((DSHKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHK {
                get {
                    try {
                        return ((string)(this[this.tableDSHK.SOHKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHK\' in table \'DSHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSHK.SOHKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DC {
                get {
                    try {
                        return ((string)(this[this.tableDSHK.DCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DC\' in table \'DSHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSHK.DCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TINHTRANG {
                get {
                    try {
                        return ((string)(this[this.tableDSHK.TINHTRANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TINHTRANG\' in table \'DSHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSHK.TINHTRANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLHOKHAU {
                get {
                    try {
                        return ((string)(this[this.tableDSHK.SLHOKHAUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLHOKHAU\' in table \'DSHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSHK.SLHOKHAUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKNull() {
                return this.IsNull(this.tableDSHK.SOHKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKNull() {
                this[this.tableDSHK.SOHKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNull() {
                return this.IsNull(this.tableDSHK.DCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNull() {
                this[this.tableDSHK.DCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINHTRANGNull() {
                return this.IsNull(this.tableDSHK.TINHTRANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINHTRANGNull() {
                this[this.tableDSHK.TINHTRANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLHOKHAUNull() {
                return this.IsNull(this.tableDSHK.SLHOKHAUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLHOKHAUNull() {
                this[this.tableDSHK.SLHOKHAUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_HK_TTHKRow : global::System.Data.DataRow {
            
            private TK_HK_TTHKDataTable tableTK_HK_TTHK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_TTHKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_HK_TTHK = ((TK_HK_TTHKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHK {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.SOHKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHK\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.SOHKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SONHA {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.SONHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SONHA\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.SONHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENDUONG {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.TENDUONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENDUONG\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.TENDUONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHUONGXA {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.PHUONGXAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHUONGXA\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.PHUONGXAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANHUYEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.QUANHUYENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANHUYEN\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.QUANHUYENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TINHTHANHPHO {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_TTHK.TINHTHANHPHOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TINHTHANHPHO\' in table \'TK_HK_TTHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_TTHK.TINHTHANHPHOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKNull() {
                return this.IsNull(this.tableTK_HK_TTHK.SOHKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKNull() {
                this[this.tableTK_HK_TTHK.SOHKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSONHANull() {
                return this.IsNull(this.tableTK_HK_TTHK.SONHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSONHANull() {
                this[this.tableTK_HK_TTHK.SONHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENDUONGNull() {
                return this.IsNull(this.tableTK_HK_TTHK.TENDUONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENDUONGNull() {
                this[this.tableTK_HK_TTHK.TENDUONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHUONGXANull() {
                return this.IsNull(this.tableTK_HK_TTHK.PHUONGXAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHUONGXANull() {
                this[this.tableTK_HK_TTHK.PHUONGXAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANHUYENNull() {
                return this.IsNull(this.tableTK_HK_TTHK.QUANHUYENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANHUYENNull() {
                this[this.tableTK_HK_TTHK.QUANHUYENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINHTHANHPHONull() {
                return this.IsNull(this.tableTK_HK_TTHK.TINHTHANHPHOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINHTHANHPHONull() {
                this[this.tableTK_HK_TTHK.TINHTHANHPHOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_HK_CHHKRow : global::System.Data.DataRow {
            
            private TK_HK_CHHKDataTable tableTK_HK_CHHK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_CHHKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_HK_CHHK = ((TK_HK_CHHKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHKCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.SOHKCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHKCDI\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.SOHKCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.DCCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCCDI\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.DCCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHKCDEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.SOHKCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHKCDEN\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.SOHKCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCCDEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.DCCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCCDEN\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.DCCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGUOIKYTEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.NGUOIKYTENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGUOIKYTEN\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.NGUOIKYTENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHHK.NGAYCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCDI\' in table \'TK_HK_CHHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHHK.NGAYCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKCDINull() {
                return this.IsNull(this.tableTK_HK_CHHK.SOHKCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKCDINull() {
                this[this.tableTK_HK_CHHK.SOHKCDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCCDINull() {
                return this.IsNull(this.tableTK_HK_CHHK.DCCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCCDINull() {
                this[this.tableTK_HK_CHHK.DCCDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKCDENNull() {
                return this.IsNull(this.tableTK_HK_CHHK.SOHKCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKCDENNull() {
                this[this.tableTK_HK_CHHK.SOHKCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCCDENNull() {
                return this.IsNull(this.tableTK_HK_CHHK.DCCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCCDENNull() {
                this[this.tableTK_HK_CHHK.DCCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGUOIKYTENNull() {
                return this.IsNull(this.tableTK_HK_CHHK.NGUOIKYTENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGUOIKYTENNull() {
                this[this.tableTK_HK_CHHK.NGUOIKYTENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableTK_HK_CHHK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableTK_HK_CHHK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCDINull() {
                return this.IsNull(this.tableTK_HK_CHHK.NGAYCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCDINull() {
                this[this.tableTK_HK_CHHK.NGAYCDIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_HK_CHKRow : global::System.Data.DataRow {
            
            private TK_HK_CHKDataTable tableTK_HK_CHK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_HK_CHKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_HK_CHK = ((TK_HK_CHKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHK {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHK.SOHKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHK\' in table \'TK_HK_CHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHK.SOHKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DC {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHK.DCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DC\' in table \'TK_HK_CHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHK.DCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGUOIKYTEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHK.NGUOIKYTENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGUOIKYTEN\' in table \'TK_HK_CHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHK.NGUOIKYTENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'TK_HK_CHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCAT {
                get {
                    try {
                        return ((string)(this[this.tableTK_HK_CHK.NGAYCATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAT\' in table \'TK_HK_CHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_HK_CHK.NGAYCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKNull() {
                return this.IsNull(this.tableTK_HK_CHK.SOHKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKNull() {
                this[this.tableTK_HK_CHK.SOHKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNull() {
                return this.IsNull(this.tableTK_HK_CHK.DCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNull() {
                this[this.tableTK_HK_CHK.DCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGUOIKYTENNull() {
                return this.IsNull(this.tableTK_HK_CHK.NGUOIKYTENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGUOIKYTENNull() {
                this[this.tableTK_HK_CHK.NGUOIKYTENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableTK_HK_CHK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableTK_HK_CHK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCATNull() {
                return this.IsNull(this.tableTK_HK_CHK.NGAYCATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCATNull() {
                this[this.tableTK_HK_CHK.NGAYCATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_NK_TTNKRow : global::System.Data.DataRow {
            
            private TK_NK_TTNKDataTable tableTK_NK_TTNK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_TTNKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_NK_TTNK = ((TK_NK_TTNKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.HOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHULOT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.CHULOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHULOT\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.CHULOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.QHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QH\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.QHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGS\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDP {
                get {
                    try {
                        return ((int)(this[this.tableTK_NK_TTNK.TDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDP\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.TDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NS\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NQ {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NQ\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TG {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.TGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TG\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.TGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLV {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NLVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NLV\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NLVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NGAYCAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAP_CMND\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NGAYCAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOICAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NOICAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOICAP_CMND\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NOICAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTNDKTT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NTNDKTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNDKTT\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NTNDKTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTTTKCD {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NTTTKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTTTKCD\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NTTTKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCDEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.NGAYCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCDEN\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.NGAYCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_TTNK.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'TK_NK_TTNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_TTNK.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONull() {
                return this.IsNull(this.tableTK_NK_TTNK.HOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONull() {
                this[this.tableTK_NK_TTNK.HOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHULOTNull() {
                return this.IsNull(this.tableTK_NK_TTNK.CHULOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHULOTNull() {
                this[this.tableTK_NK_TTNK.CHULOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableTK_NK_TTNK.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableTK_NK_TTNK.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQHNull() {
                return this.IsNull(this.tableTK_NK_TTNK.QHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQHNull() {
                this[this.tableTK_NK_TTNK.QHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGSNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGSNull() {
                this[this.tableTK_NK_TTNK.NGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableTK_NK_TTNK.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableTK_NK_TTNK.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDPNull() {
                return this.IsNull(this.tableTK_NK_TTNK.TDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDPNull() {
                this[this.tableTK_NK_TTNK.TDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableTK_NK_TTNK.NSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNQNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNQNull() {
                this[this.tableTK_NK_TTNK.NQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableTK_NK_TTNK.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableTK_NK_TTNK.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTNull() {
                return this.IsNull(this.tableTK_NK_TTNK.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTNull() {
                this[this.tableTK_NK_TTNK.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGNull() {
                return this.IsNull(this.tableTK_NK_TTNK.TGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGNull() {
                this[this.tableTK_NK_TTNK.TGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNNNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNNNull() {
                this[this.tableTK_NK_TTNK.NNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLVNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NLVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLVNull() {
                this[this.tableTK_NK_TTNK.NLVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableTK_NK_TTNK.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableTK_NK_TTNK.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NGAYCAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCAP_CMNDNull() {
                this[this.tableTK_NK_TTNK.NGAYCAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOICAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NOICAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOICAP_CMNDNull() {
                this[this.tableTK_NK_TTNK.NOICAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNDKTTNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NTNDKTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNDKTTNull() {
                this[this.tableTK_NK_TTNK.NTNDKTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTTTKCDNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NTTTKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTTTKCDNull() {
                this[this.tableTK_NK_TTNK.NTTTKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCDENNull() {
                return this.IsNull(this.tableTK_NK_TTNK.NGAYCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCDENNull() {
                this[this.tableTK_NK_TTNK.NGAYCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableTK_NK_TTNK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableTK_NK_TTNK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableTK_NK_TTNK.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableTK_NK_TTNK.GHICHUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_NK_CHNKRow : global::System.Data.DataRow {
            
            private TK_NK_CHNKDataTable tableTK_NK_CHNK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_CHNKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_NK_CHNK = ((TK_NK_CHNKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHKCDEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.SOHKCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHKCDEN\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.SOHKCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCCDEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.DCCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCCDEN\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.DCCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.HOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHULOT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.CHULOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHULOT\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.CHULOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.QHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QH\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.QHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGS\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDP {
                get {
                    try {
                        return ((int)(this[this.tableTK_NK_CHNK.TDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDP\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.TDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NS\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NQ {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NQ\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TG {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.TGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TG\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.TGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLV {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NLVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NLV\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NLVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NGAYCAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAP_CMND\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NGAYCAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOICAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NOICAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOICAP_CMND\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NOICAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTNDKTT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NTNDKTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNDKTT\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NTNDKTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.NGAYCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCDI\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.NGAYCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOHKDI {
                get {
                    try {
                        return ((int)(this[this.tableTK_NK_CHNK.SOHKDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHKDI\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.SOHKDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CHNK.DCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCDI\' in table \'TK_NK_CHNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CHNK.DCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKCDENNull() {
                return this.IsNull(this.tableTK_NK_CHNK.SOHKCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKCDENNull() {
                this[this.tableTK_NK_CHNK.SOHKCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCCDENNull() {
                return this.IsNull(this.tableTK_NK_CHNK.DCCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCCDENNull() {
                this[this.tableTK_NK_CHNK.DCCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONull() {
                return this.IsNull(this.tableTK_NK_CHNK.HOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONull() {
                this[this.tableTK_NK_CHNK.HOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHULOTNull() {
                return this.IsNull(this.tableTK_NK_CHNK.CHULOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHULOTNull() {
                this[this.tableTK_NK_CHNK.CHULOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableTK_NK_CHNK.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableTK_NK_CHNK.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQHNull() {
                return this.IsNull(this.tableTK_NK_CHNK.QHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQHNull() {
                this[this.tableTK_NK_CHNK.QHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGSNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGSNull() {
                this[this.tableTK_NK_CHNK.NGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableTK_NK_CHNK.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableTK_NK_CHNK.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDPNull() {
                return this.IsNull(this.tableTK_NK_CHNK.TDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDPNull() {
                this[this.tableTK_NK_CHNK.TDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableTK_NK_CHNK.NSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNQNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNQNull() {
                this[this.tableTK_NK_CHNK.NQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableTK_NK_CHNK.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableTK_NK_CHNK.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTNull() {
                return this.IsNull(this.tableTK_NK_CHNK.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTNull() {
                this[this.tableTK_NK_CHNK.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGNull() {
                return this.IsNull(this.tableTK_NK_CHNK.TGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGNull() {
                this[this.tableTK_NK_CHNK.TGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNNNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNNNull() {
                this[this.tableTK_NK_CHNK.NNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLVNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NLVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLVNull() {
                this[this.tableTK_NK_CHNK.NLVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableTK_NK_CHNK.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableTK_NK_CHNK.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NGAYCAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCAP_CMNDNull() {
                this[this.tableTK_NK_CHNK.NGAYCAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOICAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NOICAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOICAP_CMNDNull() {
                this[this.tableTK_NK_CHNK.NOICAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNDKTTNull() {
                return this.IsNull(this.tableTK_NK_CHNK.NTNDKTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNDKTTNull() {
                this[this.tableTK_NK_CHNK.NTNDKTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCDINull() {
                return this.IsNull(this.tableTK_NK_CHNK.NGAYCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCDINull() {
                this[this.tableTK_NK_CHNK.NGAYCDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableTK_NK_CHNK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableTK_NK_CHNK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableTK_NK_CHNK.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableTK_NK_CHNK.GHICHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKDINull() {
                return this.IsNull(this.tableTK_NK_CHNK.SOHKDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKDINull() {
                this[this.tableTK_NK_CHNK.SOHKDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCDINull() {
                return this.IsNull(this.tableTK_NK_CHNK.DCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCDINull() {
                this[this.tableTK_NK_CHNK.DCDIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_NK_CNKRow : global::System.Data.DataRow {
            
            private TK_NK_CNKDataTable tableTK_NK_CNK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_CNKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_NK_CNK = ((TK_NK_CNKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.HOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHULOT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.CHULOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHULOT\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.CHULOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.QHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QH\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.QHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGS\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDP {
                get {
                    try {
                        return ((int)(this[this.tableTK_NK_CNK.TDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDP\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.TDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NS\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NQ {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NQ\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TG {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.TGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TG\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.TGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLV {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NLVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NLV\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NLVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NGAYCAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAP_CMND\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NGAYCAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOICAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NOICAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOICAP_CMND\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NOICAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTNDKTT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NTNDKTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNDKTT\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NTNDKTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCDI {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.NGAYCDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCDI\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.NGAYCDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_CNK.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'TK_NK_CNK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_CNK.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONull() {
                return this.IsNull(this.tableTK_NK_CNK.HOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONull() {
                this[this.tableTK_NK_CNK.HOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHULOTNull() {
                return this.IsNull(this.tableTK_NK_CNK.CHULOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHULOTNull() {
                this[this.tableTK_NK_CNK.CHULOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableTK_NK_CNK.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableTK_NK_CNK.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQHNull() {
                return this.IsNull(this.tableTK_NK_CNK.QHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQHNull() {
                this[this.tableTK_NK_CNK.QHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGSNull() {
                return this.IsNull(this.tableTK_NK_CNK.NGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGSNull() {
                this[this.tableTK_NK_CNK.NGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableTK_NK_CNK.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableTK_NK_CNK.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDPNull() {
                return this.IsNull(this.tableTK_NK_CNK.TDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDPNull() {
                this[this.tableTK_NK_CNK.TDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableTK_NK_CNK.NSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableTK_NK_CNK.NSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNQNull() {
                return this.IsNull(this.tableTK_NK_CNK.NQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNQNull() {
                this[this.tableTK_NK_CNK.NQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableTK_NK_CNK.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableTK_NK_CNK.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTNull() {
                return this.IsNull(this.tableTK_NK_CNK.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTNull() {
                this[this.tableTK_NK_CNK.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGNull() {
                return this.IsNull(this.tableTK_NK_CNK.TGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGNull() {
                this[this.tableTK_NK_CNK.TGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNNNull() {
                return this.IsNull(this.tableTK_NK_CNK.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNNNull() {
                this[this.tableTK_NK_CNK.NNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLVNull() {
                return this.IsNull(this.tableTK_NK_CNK.NLVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLVNull() {
                this[this.tableTK_NK_CNK.NLVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableTK_NK_CNK.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableTK_NK_CNK.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_CNK.NGAYCAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCAP_CMNDNull() {
                this[this.tableTK_NK_CNK.NGAYCAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOICAP_CMNDNull() {
                return this.IsNull(this.tableTK_NK_CNK.NOICAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOICAP_CMNDNull() {
                this[this.tableTK_NK_CNK.NOICAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNDKTTNull() {
                return this.IsNull(this.tableTK_NK_CNK.NTNDKTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNDKTTNull() {
                this[this.tableTK_NK_CNK.NTNDKTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCDINull() {
                return this.IsNull(this.tableTK_NK_CNK.NGAYCDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCDINull() {
                this[this.tableTK_NK_CNK.NGAYCDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableTK_NK_CNK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableTK_NK_CNK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableTK_NK_CNK.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableTK_NK_CNK.GHICHUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DSNKTheoHKRow : global::System.Data.DataRow {
            
            private DSNKTheoHKDataTable tableDSNKTheoHK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSNKTheoHKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDSNKTheoHK = ((DSNKTheoHKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOHK {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.SOHKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOHK\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.SOHKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.HOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHULOT {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.CHULOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHULOT\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.CHULOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QH {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.QHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QH\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.QHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGS {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGS\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TDP {
                get {
                    try {
                        return ((int)(this[this.tableDSNKTheoHK.TDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDP\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.TDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NS {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NS\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NQ {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NQ\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TG {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.TGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TG\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.TGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NN {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLV {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NLVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NLV\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NLVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NGAYCAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCAP_CMND\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NGAYCAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOICAP_CMND {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NOICAP_CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOICAP_CMND\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NOICAP_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTNDKTT {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NTNDKTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNDKTT\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NTNDKTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTTTKCD {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NTTTKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTTTKCD\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NTTTKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYCDEN {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.NGAYCDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYCDEN\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.NGAYCDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LYDO {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.LYDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LYDO\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.LYDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableDSNKTheoHK.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'DSNKTheoHK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSNKTheoHK.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOHKNull() {
                return this.IsNull(this.tableDSNKTheoHK.SOHKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOHKNull() {
                this[this.tableDSNKTheoHK.SOHKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONull() {
                return this.IsNull(this.tableDSNKTheoHK.HOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONull() {
                this[this.tableDSNKTheoHK.HOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHULOTNull() {
                return this.IsNull(this.tableDSNKTheoHK.CHULOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHULOTNull() {
                this[this.tableDSNKTheoHK.CHULOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableDSNKTheoHK.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableDSNKTheoHK.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQHNull() {
                return this.IsNull(this.tableDSNKTheoHK.QHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQHNull() {
                this[this.tableDSNKTheoHK.QHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGSNull() {
                return this.IsNull(this.tableDSNKTheoHK.NGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGSNull() {
                this[this.tableDSNKTheoHK.NGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableDSNKTheoHK.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableDSNKTheoHK.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDPNull() {
                return this.IsNull(this.tableDSNKTheoHK.TDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDPNull() {
                this[this.tableDSNKTheoHK.TDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSNull() {
                return this.IsNull(this.tableDSNKTheoHK.NSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSNull() {
                this[this.tableDSNKTheoHK.NSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNQNull() {
                return this.IsNull(this.tableDSNKTheoHK.NQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNQNull() {
                this[this.tableDSNKTheoHK.NQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableDSNKTheoHK.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableDSNKTheoHK.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTNull() {
                return this.IsNull(this.tableDSNKTheoHK.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTNull() {
                this[this.tableDSNKTheoHK.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGNull() {
                return this.IsNull(this.tableDSNKTheoHK.TGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGNull() {
                this[this.tableDSNKTheoHK.TGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNNNull() {
                return this.IsNull(this.tableDSNKTheoHK.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNNNull() {
                this[this.tableDSNKTheoHK.NNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLVNull() {
                return this.IsNull(this.tableDSNKTheoHK.NLVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLVNull() {
                this[this.tableDSNKTheoHK.NLVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableDSNKTheoHK.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableDSNKTheoHK.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCAP_CMNDNull() {
                return this.IsNull(this.tableDSNKTheoHK.NGAYCAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCAP_CMNDNull() {
                this[this.tableDSNKTheoHK.NGAYCAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOICAP_CMNDNull() {
                return this.IsNull(this.tableDSNKTheoHK.NOICAP_CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOICAP_CMNDNull() {
                this[this.tableDSNKTheoHK.NOICAP_CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNDKTTNull() {
                return this.IsNull(this.tableDSNKTheoHK.NTNDKTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNDKTTNull() {
                this[this.tableDSNKTheoHK.NTNDKTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTTTKCDNull() {
                return this.IsNull(this.tableDSNKTheoHK.NTTTKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTTTKCDNull() {
                this[this.tableDSNKTheoHK.NTTTKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYCDENNull() {
                return this.IsNull(this.tableDSNKTheoHK.NGAYCDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYCDENNull() {
                this[this.tableDSNKTheoHK.NGAYCDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLYDONull() {
                return this.IsNull(this.tableDSNKTheoHK.LYDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLYDONull() {
                this[this.tableDSNKTheoHK.LYDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableDSNKTheoHK.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableDSNKTheoHK.GHICHUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TK_NK_DT_TTDTRow : global::System.Data.DataRow {
            
            private TK_NK_DT_TTDTDataTable tableTK_NK_DT_TTDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TK_NK_DT_TTDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTK_NK_DT_TTDT = ((TK_NK_DT_TTDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYSINH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.NGAYSINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYSINH\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.NGAYSINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOAIDT {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.LOAIDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOAIDT\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.LOAIDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QHCH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.QHCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QHCH\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.QHCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NSINH {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.NSINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSINH\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.NSINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NQUAN {
                get {
                    try {
                        return ((string)(this[this.tableTK_NK_DT_TTDT.NQUANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NQUAN\' in table \'TK_NK_DT_TTDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTK_NK_DT_TTDT.NQUANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableTK_NK_DT_TTDT.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableTK_NK_DT_TTDT.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableTK_NK_DT_TTDT.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYSINHNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.NGAYSINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYSINHNull() {
                this[this.tableTK_NK_DT_TTDT.NGAYSINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableTK_NK_DT_TTDT.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOAIDTNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.LOAIDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOAIDTNull() {
                this[this.tableTK_NK_DT_TTDT.LOAIDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQHCHNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.QHCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQHCHNull() {
                this[this.tableTK_NK_DT_TTDT.QHCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNSINHNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.NSINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNSINHNull() {
                this[this.tableTK_NK_DT_TTDT.NSINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNQUANNull() {
                return this.IsNull(this.tableTK_NK_DT_TTDT.NQUANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNQUANNull() {
                this[this.tableTK_NK_DT_TTDT.NQUANColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DSDTRow : global::System.Data.DataRow {
            
            private DSDTDataTable tableDSDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDSDT = ((DSDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.TENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.TENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGSINH {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.NGSINHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGSINH\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.NGSINHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIDANH {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.BIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIDANH\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.BIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOAIDT {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.LOAIDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOAIDT\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.LOAIDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGVP {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.NGVPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGVP\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.NGVPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOIDANH {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.TOIDANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOIDANH\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.TOIDANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOAIHINHDT {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.LOAIHINHDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOAIHINHDT\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.LOAIHINHDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUCQL {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.MUCQLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MUCQL\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.MUCQLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADT {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.MADTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADT\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.MADTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableDSDT.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'DSDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSDT.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNull() {
                return this.IsNull(this.tableDSDT.TENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNull() {
                this[this.tableDSDT.TENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableDSDT.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableDSDT.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGSINHNull() {
                return this.IsNull(this.tableDSDT.NGSINHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGSINHNull() {
                this[this.tableDSDT.NGSINHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIDANHNull() {
                return this.IsNull(this.tableDSDT.BIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIDANHNull() {
                this[this.tableDSDT.BIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOAIDTNull() {
                return this.IsNull(this.tableDSDT.LOAIDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOAIDTNull() {
                this[this.tableDSDT.LOAIDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGVPNull() {
                return this.IsNull(this.tableDSDT.NGVPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGVPNull() {
                this[this.tableDSDT.NGVPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOIDANHNull() {
                return this.IsNull(this.tableDSDT.TOIDANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOIDANHNull() {
                this[this.tableDSDT.TOIDANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOAIHINHDTNull() {
                return this.IsNull(this.tableDSDT.LOAIHINHDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOAIHINHDTNull() {
                this[this.tableDSDT.LOAIHINHDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMUCQLNull() {
                return this.IsNull(this.tableDSDT.MUCQLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMUCQLNull() {
                this[this.tableDSDT.MUCQLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADTNull() {
                return this.IsNull(this.tableDSDT.MADTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADTNull() {
                this[this.tableDSDT.MADTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableDSDT.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableDSDT.GHICHUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TangGiamRow : global::System.Data.DataRow {
            
            private TangGiamDataTable tableTangGiam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TangGiamRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTangGiam = ((TangGiamDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THANG {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.THANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANG\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.THANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKHT {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.HKHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKHT\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.HKHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKTRUOC {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.HKTRUOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKTRUOC\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.HKTRUOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKDEN {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.HKDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKDEN\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.HKDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKDI {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.HKDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKDI\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.HKDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKTG {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.HKTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKTG\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.HKTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NKHT {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.NKHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKHT\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.NKHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NKTRUOC {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.NKTRUOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKTRUOC\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.NKTRUOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NKDEN {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.NKDENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKDEN\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.NKDENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NKDI {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.NKDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKDI\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.NKDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NKTG {
                get {
                    try {
                        return ((string)(this[this.tableTangGiam.NKTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NKTG\' in table \'TangGiam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTangGiam.NKTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANGNull() {
                return this.IsNull(this.tableTangGiam.THANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANGNull() {
                this[this.tableTangGiam.THANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKHTNull() {
                return this.IsNull(this.tableTangGiam.HKHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKHTNull() {
                this[this.tableTangGiam.HKHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKTRUOCNull() {
                return this.IsNull(this.tableTangGiam.HKTRUOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKTRUOCNull() {
                this[this.tableTangGiam.HKTRUOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKDENNull() {
                return this.IsNull(this.tableTangGiam.HKDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKDENNull() {
                this[this.tableTangGiam.HKDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKDINull() {
                return this.IsNull(this.tableTangGiam.HKDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKDINull() {
                this[this.tableTangGiam.HKDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKTGNull() {
                return this.IsNull(this.tableTangGiam.HKTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKTGNull() {
                this[this.tableTangGiam.HKTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNKHTNull() {
                return this.IsNull(this.tableTangGiam.NKHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNKHTNull() {
                this[this.tableTangGiam.NKHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNKTRUOCNull() {
                return this.IsNull(this.tableTangGiam.NKTRUOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNKTRUOCNull() {
                this[this.tableTangGiam.NKTRUOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNKDENNull() {
                return this.IsNull(this.tableTangGiam.NKDENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNKDENNull() {
                this[this.tableTangGiam.NKDENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNKDINull() {
                return this.IsNull(this.tableTangGiam.NKDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNKDINull() {
                this[this.tableTangGiam.NKDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNKTGNull() {
                return this.IsNull(this.tableTangGiam.NKTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNKTGNull() {
                this[this.tableTangGiam.NKTGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DSHKRowChangeEvent : global::System.EventArgs {
            
            private DSHKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKRowChangeEvent(DSHKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSHKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_HK_TTHKRowChangeEvent : global::System.EventArgs {
            
            private TK_HK_TTHKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKRowChangeEvent(TK_HK_TTHKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_TTHKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_HK_CHHKRowChangeEvent : global::System.EventArgs {
            
            private TK_HK_CHHKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKRowChangeEvent(TK_HK_CHHKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHHKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_HK_CHKRowChangeEvent : global::System.EventArgs {
            
            private TK_HK_CHKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKRowChangeEvent(TK_HK_CHKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_HK_CHKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_NK_TTNKRowChangeEvent : global::System.EventArgs {
            
            private TK_NK_TTNKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKRowChangeEvent(TK_NK_TTNKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_TTNKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_NK_CHNKRowChangeEvent : global::System.EventArgs {
            
            private TK_NK_CHNKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKRowChangeEvent(TK_NK_CHNKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CHNKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_NK_CNKRowChangeEvent : global::System.EventArgs {
            
            private TK_NK_CNKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKRowChangeEvent(TK_NK_CNKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_CNKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DSNKTheoHKRowChangeEvent : global::System.EventArgs {
            
            private DSNKTheoHKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKRowChangeEvent(DSNKTheoHKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSNKTheoHKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TK_NK_DT_TTDTRowChangeEvent : global::System.EventArgs {
            
            private TK_NK_DT_TTDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTRowChangeEvent(TK_NK_DT_TTDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TK_NK_DT_TTDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DSDTRowChangeEvent : global::System.EventArgs {
            
            private DSDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTRowChangeEvent(DSDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TangGiamRowChangeEvent : global::System.EventArgs {
            
            private TangGiamRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamRowChangeEvent(TangGiamRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TangGiamRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591